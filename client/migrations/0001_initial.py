# Generated by Django 5.2.7 on 2025-10-17 15:03

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Policy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('policy_number', models.CharField(max_length=50, unique=True)),
                ('policy_type', models.CharField(choices=[('vehicle', 'Vehicle Insurance'), ('property', 'Property Insurance')], default='vehicle', max_length=20)),
                ('coverage_amount', models.DecimalField(decimal_places=2, max_digits=12)),
                ('premium_amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('monthly_payment', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='UserSolicitation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('occurred_at', models.DateTimeField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('evidence_url', models.URLField(blank=True, max_length=255)),
                ('estimated_loss', models.DecimalField(blank=True, decimal_places=2, help_text='Approximate value of the claimed damage.', max_digits=12, null=True)),
                ('claim_location', models.CharField(blank=True, help_text='Location where the incident occurred.', max_length=255)),
                ('witnesses', models.TextField(blank=True, help_text='Names or contacts of witnesses, if any.')),
                ('police_report_number', models.CharField(blank=True, help_text='Police or authority report reference number.', max_length=100)),
                ('status', models.CharField(choices=[('Pending', 'Pending'), ('Under Review', 'Under Review'), ('Approved', 'Approved'), ('Rejected', 'Rejected'), ('Successful', 'Successful')], default='Pending', max_length=20)),
                ('internal_notes', models.TextField(blank=True, help_text='Notes from claim evaluators or agents.')),
                ('policy_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='solicitations', to='client.policy')),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='solicitations', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserPolicy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('assigned_at', models.DateTimeField(auto_now_add=True)),
                ('start_date', models.DateField(blank=True, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('role', models.CharField(choices=[('holder', 'Policy Holder'), ('beneficiary', 'Beneficiary'), ('dependent', 'Dependent')], default='holder', max_length=50)),
                ('policy_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='policy_users', to='client.policy')),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_policies', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('user_id', 'policy_id')},
            },
        ),
    ]
